module.exports = function(game) {
    this.game = game
    var T = game.THREE
    
    var body = new T.Object3D();
    body.rotation.y = Math.PI
    var headgroup = new T.Object3D();
    
    var abdomen = new T.Mesh(
        new T.CubeGeometry(10, 10, 10),
        new T.MeshLambertMaterial({
            color: 0x200830,
            ambient: 0x200830
        })
    );
    abdomen.position.set(0, 10, 0);
    
    var head = new T.Mesh(
        new T.CubeGeometry(5, 5, 5),
        new T.MeshLambertMaterial({
            color: 0x200830,
            ambient: 0x200830
        })
    );
    head.position.set(0, 8, -7.5);
    
    var eyes = [0,1].map(function () {
        var eye = new T.Mesh(
            new T.CubeGeometry(1, 1, 1),
            new T.MeshLambertMaterial({
                color: 0xffffff,
                ambient: 0xffffff
            })
        );
        body.add(eye);
        return eye;
    });
    eyes[0].position.set(1.5, 9, 10);
    eyes[1].position.set(-1.5, 9, 10);
    body.eyes = eyes
    
    var legs = [];
    for (var side = 0; side <= 1; side++) {
        for (var i = 0; i < 2; i++) {
            var leg = new T.Object3D;
            window.leg = leg
            leg.position.z = i * 4 - 2;
            leg.state = i % 2;
            leg.position.y = leg.state + 3;
            
            legs.push(leg);
            body.add(leg);
            
            var horiz = new T.Mesh(
                new T.CubeGeometry(5, 1, 1),
                new T.MeshLambertMaterial({
                    color: 0x200830,
                    ambient: 0x200830
                })
            );
            horiz.position.x = 7.5 - side * 15;
            horiz.position.y = 7;
            leg.add(horiz);
            
            var vert = new T.Mesh(
                new T.CubeGeometry(1, 10, 1),
                new T.MeshLambertMaterial({
                    color: 0x200830,
                    ambient: 0x200830
                })
            );
            vert.position.x = 10 - side * 20;
            vert.position.y = 1.5;
            leg.add(vert);
        }
    }
    body.legs = legs
    setInterval(function () {
        legs.forEach(function (leg) {
            leg.state = !leg.state;
            leg.position.y = leg.state + 3;
        });
    }, 100);
    
    var dims = new T.Vector3(10, 10, 10);
    
    var unrotatedHeadMesh = new THREE.Object3D();
    unrotatedHeadMesh.rotation.y = Math.PI / 2;
    
    var playerModel = new T.Object3D()
    playerModel.position.copy({x: -12, y: 0, z: 15})
    playerModel.body = body
    
    var playerRotation = new T.Object3D();
    playerRotation.rotation.y = 0
    playerRotation.position.y = 0
    playerModel.playerRotation = playerRotation

    var rotatedHead = new T.Object3D();
    rotatedHead.rotation.y = -Math.PI/2;

    var playerGroup = new T.Object3D();
    playerGroup.cameraInside = new T.Object3D()
    playerGroup.cameraOutside = new T.Object3D()

    playerGroup.cameraInside.position.x = 0;
    playerGroup.cameraInside.position.y = 2;
    playerGroup.cameraInside.position.z = 0; 

    playerGroup.head = head
    playerGroup.rotatedHead = rotatedHead
    playerGroup.unrotatedHeadMesh = unrotatedHeadMesh
    
    playerGroup.cameraOutside.position.z = 100
    
    body.add(abdomen);
    playerModel.add(body)
    playerRotation.add(playerModel)
    unrotatedHeadMesh.add(head);
    headgroup.add(unrotatedHeadMesh);
    rotatedHead.add(headgroup);
    playerModel.add(rotatedHead);
    head.add(playerGroup.cameraInside)
    playerGroup.cameraInside.add(playerGroup.cameraOutside)
    playerGroup.add(playerRotation)
    
    playerGroup.playerModel = playerModel
    return playerGroup
}
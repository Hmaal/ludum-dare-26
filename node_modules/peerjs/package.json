{
  "name": "peerjs",
  "version": "0.2.0",
  "description": "PeerJS client library",
  "devDependencies": {
    "uglify-js": "~1.3.4",
    "mocha": "*",
    "expect.js": "*"
  },
  "readme": "# PeerJS: Peer-to-peer data in the browser #\n\nPeerJS provides a complete, configurable, and easy-to-use peer-to-peer data API built on top of WebRTC.   \nEach peer simply provides a identifier with which other peers using the same API key can connect.\n\n##[http://peerjs.com](http://peerjs.com)\n\n\n**Include the library**\n\n    <script src=\"http://cdn.peerjs.com/0/peer.js\"></script>\n\n**Peer**\n\n```html\n<script>\n  var peer = new Peer('someid', {key: 'apikey'});\n  peer.on('connection', function(conn) {\n    conn.on('data', function(data){\n      // Will print 'hi!'\n      console.log(data);\n    });\n  });\n</script>\n```\n\n**Connecting peer**\n\n```html\n<script>\n  var peer = new Peer('anotherid', {key: 'apikey'});\n  var conn = peer.connect('someid');\n  conn.on('open', function(){\n    conn.send('hi!');\n  }); \n</script>\n```\n\n### [Getting started](http://peerjs.com/start)\n\n### [API reference](https://github.com/peers/peerjs/blob/master/docs/api.md)\n\n### [Browser compatibility status](http://peerjs.com/status)\n\n### [PeerServer](https://github.com/peers/peerjs-server)\n\n### [Discuss PeerJS on our Google Group](https://groups.google.com/forum/?fromgroups#!forum/peerjs)\n\n### [Changelog](https://github.com/peers/peerjs/blob/master/changelog.md)\n\n\n## In the future\n\n* Tests\n* Firefox support\n* Stream API\n* Video/audio support\n\n\n",
  "readmeFilename": "README.md",
  "_id": "peerjs@0.2.0",
  "dist": {
    "shasum": "0e139ee88911defc31493ad5d14103ef8a6b5424"
  },
  "_from": "peerjs@",
  "_resolved": "https://registry.npmjs.org/peerjs/-/peerjs-0.2.0.tgz"
}
